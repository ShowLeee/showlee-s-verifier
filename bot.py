import discord
from discord.ext import commands, tasks
from discord.ui import Button, View, Modal, TextInput, Select
import asyncio
import datetime
import aiohttp
import os
from dotenv import load_dotenv
import traceback

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', intents=intents)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö
verification_data = {}
pending_verifications = {}
verification_settings = {}
cooldown_users = {}  # {user_id: cooldown_end_time}

print("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥—É–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

class ChannelSetupModal(Modal):
    def __init__(self):
        super().__init__(title="üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤")
        
        self.welcome_channel = TextInput(
            label="ID –∫–∞–Ω–∞–ª–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è",
            placeholder="123456789012345678",
            style=discord.TextStyle.short,
            required=True,
            max_length=20
        )
        
        self.log_channel = TextInput(
            label="ID –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤",
            placeholder="123456789012345678",
            style=discord.TextStyle.short,
            required=True,
            max_length=20
        )
        
        self.add_item(self.welcome_channel)
        self.add_item(self.log_channel)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            print(f"üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            guild_id = interaction.guild_id
            
            if guild_id not in verification_settings:
                verification_settings[guild_id] = {}
            
            verification_settings[guild_id]['welcome_channel_id'] = int(self.welcome_channel.value)
            verification_settings[guild_id]['log_channel_id'] = int(self.log_channel.value)
            
            # –°–æ–∑–¥–∞–µ–º/–æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            channel = bot.get_channel(int(self.welcome_channel.value))
            if channel:
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
                async for message in channel.history(limit=10):
                    if message.author == bot.user and message.components:
                        await message.delete()
                
                embed = discord.Embed(
                    title="üìß –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
                    description="## –ö–∞–∫ –ø—Ä–æ–π—Ç–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é\n\n–ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ **\"–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è\"** –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤. –í—ã –¥–æ–ª–∂–Ω—ã –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å—é —Ñ–æ—Ä–º—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É.\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É **\"–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è\"** –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é!",
                    color=0x5865F2
                )
                
                view = StartVerificationView()
                await channel.send(embed=embed, view=view)
                
            await interaction.response.send_message("‚úÖ –ö–∞–Ω–∞–ª—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!", ephemeral=True)
            print(f"‚úÖ –ö–∞–Ω–∞–ª—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∫–∞–Ω–∞–ª–æ–≤: {e}")
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

class RoleSetupModal(Modal):
    def __init__(self):
        super().__init__(title="üë• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π")
        
        self.temp_role = TextInput(
            label="ID –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–æ–ª–∏",
            placeholder="123456789012345678",
            style=discord.TextStyle.short,
            required=True,
            max_length=20
        )
        
        self.verified_role = TextInput(
            label="ID –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–æ–ª–∏",
            placeholder="123456789012345678",
            style=discord.TextStyle.short,
            required=True,
            max_length=20
        )
        
        self.admin_role = TextInput(
            label="ID —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–¥–ª—è –ø–∏–Ω–≥–∞)",
            placeholder="123456789012345678",
            style=discord.TextStyle.short,
            required=True,
            max_length=20
        )
        
        self.add_item(self.temp_role)
        self.add_item(self.verified_role)
        self.add_item(self.admin_role)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            print(f"üë• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            guild_id = interaction.guild_id
            
            if guild_id not in verification_settings:
                verification_settings[guild_id] = {}
            
            verification_settings[guild_id]['temp_role_id'] = int(self.temp_role.value)
            verification_settings[guild_id]['verified_role_id'] = int(self.verified_role.value)
            verification_settings[guild_id]['admin_role_id'] = int(self.admin_role.value)
            
            await interaction.response.send_message("‚úÖ –†–æ–ª–∏ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!", ephemeral=True)
            print(f"‚úÖ –†–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ —Ä–æ–ª–µ–π: {e}")
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

class QuestionsSetupModal(Modal):
    def __init__(self):
        super().__init__(title="‚ùì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤")
        
        self.questions = TextInput(
            label="–í–æ–ø—Ä–æ—Å—ã (—á–µ—Ä–µ–∑ ;)",
            placeholder="–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?;–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?;–û—Ç–∫—É–¥–∞ –≤—ã –æ –Ω–∞—Å —É–∑–Ω–∞–ª–∏?",
            style=discord.TextStyle.paragraph,
            required=True,
            max_length=1000
        )
        
        self.add_item(self.questions)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            print(f"‚ùì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            guild_id = interaction.guild_id
            
            if guild_id not in verification_settings:
                verification_settings[guild_id] = {}
            
            questions_list = [q.strip() for q in self.questions.value.split(';') if q.strip()]
            verification_settings[guild_id]['questions'] = questions_list
            
            await interaction.response.send_message(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ {len(questions_list)} –≤–æ–ø—Ä–æ—Å–æ–≤!", ephemeral=True)
            print(f"‚úÖ –í–æ–ø—Ä–æ—Å—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

class SettingsSelect(Select):
    def __init__(self):
        options = [
            discord.SelectOption(
                label="üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤",
                description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                value="channels"
            ),
            discord.SelectOption(
                label="üë• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π", 
                description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
                value="roles"
            ),
            discord.SelectOption(
                label="‚ùì –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤",
                description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏", 
                value="questions"
            ),
            discord.SelectOption(
                label="üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
                description="–ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫",
                value="status"
            )
        ]
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª...", options=options)

    async def callback(self, interaction: discord.Interaction):
        print(f"üéØ –í—ã–±—Ä–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: {self.values[0]} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
        if self.values[0] == "channels":
            modal = ChannelSetupModal()
            await interaction.response.send_modal(modal)
            
        elif self.values[0] == "roles":
            modal = RoleSetupModal()
            await interaction.response.send_modal(modal)
            
        elif self.values[0] == "questions":
            modal = QuestionsSetupModal()
            await interaction.response.send_modal(modal)
            
        elif self.values[0] == "status":
            await show_current_settings(interaction)

async def show_current_settings(interaction: discord.Interaction):
    print(f"üìä –ü—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
    guild_id = interaction.guild_id
    settings = verification_settings.get(guild_id, {})
    
    embed = discord.Embed(
        title="üìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
        color=0x5865F2,
        timestamp=datetime.datetime.now()
    )
    
    # –ö–∞–Ω–∞–ª—ã
    welcome_channel = bot.get_channel(settings.get('welcome_channel_id', 0))
    log_channel = bot.get_channel(settings.get('log_channel_id', 0))
    
    embed.add_field(
        name="üìä –ö–∞–Ω–∞–ª—ã",
        value=f"**–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ:** {welcome_channel.mention if welcome_channel else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}\n"
              f"**–õ–æ–≥–∏:** {log_channel.mention if log_channel else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}",
        inline=False
    )
    
    # –†–æ–ª–∏
    temp_role = interaction.guild.get_role(settings.get('temp_role_id', 0))
    verified_role = interaction.guild.get_role(settings.get('verified_role_id', 0))
    admin_role = interaction.guild.get_role(settings.get('admin_role_id', 0))
    
    embed.add_field(
        name="üë• –†–æ–ª–∏", 
        value=f"**–í—Ä–µ–º–µ–Ω–Ω–∞—è:** {temp_role.mention if temp_role else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}\n"
              f"**–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è:** {verified_role.mention if verified_role else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}\n"
              f"**–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {admin_role.mention if admin_role else '‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞'}",
        inline=False
    )
    
    # –í–æ–ø—Ä–æ—Å—ã
    questions = settings.get('questions', [])
    embed.add_field(
        name="‚ùì –í–æ–ø—Ä–æ—Å—ã",
        value=f"**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:** {len(questions)}\n" + 
              ("\n".join([f"{i+1}. {q}" for i, q in enumerate(questions[:3])]) + 
              ("\n..." if len(questions) > 3 else "") if questions else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"),
        inline=False
    )
    
    # –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã
    all_configured = all([
        settings.get('welcome_channel_id'),
        settings.get('log_channel_id'), 
        settings.get('temp_role_id'),
        settings.get('verified_role_id'),
        settings.get('admin_role_id'),
        settings.get('questions')
    ])
    
    status = "‚úÖ **–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!**" if all_configured else "‚ö†Ô∏è **–°–∏—Å—Ç–µ–º–∞ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞**"
    embed.add_field(name="üîß –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", value=status, inline=False)
    
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç {interaction.user.display_name}")
    
    await interaction.response.send_message(embed=embed, ephemeral=True)

class SettingsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(SettingsSelect())

class DenyReasonModal(Modal):
    def __init__(self, user_id: int):
        super().__init__(title="–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å –ø—Ä–∏—á–∏–Ω–æ–π")
        self.user_id = user_id
        
        self.reason = TextInput(
            label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏...",
            style=discord.TextStyle.paragraph,
            required=True,
            max_length=1000
        )
        self.add_item(self.reason)

    async def on_submit(self, interaction: discord.Interaction):
        print(f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.user_id} —Å –ø—Ä–∏—á–∏–Ω–æ–π")
        await handle_verification_deny(interaction, self.user_id, self.reason.value)

async def handle_verification_deny(interaction: discord.Interaction, user_id: int, reason: str = None):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print(f"üö´ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    user = bot.get_user(user_id)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫—É–ª–¥–∞—É–Ω –Ω–∞ 24 —á–∞—Å–∞
    cooldown_users[user_id] = datetime.datetime.now() + datetime.timedelta(hours=24)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    if user:
        try:
            if reason:
                await user.send(f"‚ùå **–í–∞—à–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.**\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}\n\n–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.")
            else:
                await user.send("‚ùå **–í–∞—à–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.**\n\n–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞.")
            print(f"üì® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        except discord.Forbidden:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            pass
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ –ª–æ–≥–æ–≤
    embed = interaction.message.embeds[0]
    embed.color = 0xff0000
    embed.title = f"‚ùå {user.display_name if user else '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'} (–û–¢–ö–õ–û–ù–ï–ù–û)"
    
    status_text = f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ {interaction.user.mention}\n<t:{int(datetime.datetime.now().timestamp())}:F>"
    if reason:
        status_text += f"\n**–ü—Ä–∏—á–∏–Ω–∞:** {reason}"
    
    # –ò—â–µ–º –ø–æ–ª–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
    found_status = False
    for i, field in enumerate(embed.fields):
        if field.name == "–°—Ç–∞—Ç—É—Å":
            embed.set_field_at(i, name="–°—Ç–∞—Ç—É—Å", value=status_text, inline=False)
            found_status = True
            break
    
    if not found_status:
        embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=status_text, inline=False)
    
    await interaction.message.edit(embed=embed, view=None)
    await interaction.response.send_message("‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!", ephemeral=True)
    print(f"‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")

class StartVerificationView(View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label="–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è", style=discord.ButtonStyle.primary, custom_id="verify_start")
    async def verify_button(self, interaction: discord.Interaction, button: Button):
        print(f"üîê –ù–∞—á–∞–ª–æ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user.id}")
        settings = verification_settings.get(interaction.guild_id)
        if not settings:
            print(f"‚ùå –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {interaction.guild_id}")
            await interaction.response.send_message("‚ùå –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.", ephemeral=True)
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª–¥–∞—É–Ω
        if interaction.user.id in cooldown_users:
            cooldown_end = cooldown_users[interaction.user.id]
            if datetime.datetime.now() < cooldown_end:
                time_left = cooldown_end - datetime.datetime.now()
                hours_left = int(time_left.total_seconds() // 3600)
                minutes_left = int((time_left.total_seconds() % 3600) // 60)
                print(f"‚è∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.id} –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ")
                await interaction.response.send_message(
                    f"‚ùå –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É —á–µ—Ä–µ–∑ {hours_left}—á {minutes_left}–º", 
                    ephemeral=True
                )
                return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
        if interaction.user.id in pending_verifications:
            print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {interaction.user.id} —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é")
            await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é!", ephemeral=True)
            return
        
        # –ù–∞—á–∏–Ω–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –≤ –õ–°
        try:
            await interaction.user.send("üöÄ **–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏!** –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã:")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
            pending_verifications[interaction.user.id] = {
                'guild_id': interaction.guild_id,
                'answers': [],
                'current_question': 0,
                'total_questions': len(settings['questions'])
            }
            
            # –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å
            await send_next_question(interaction.user)
            await interaction.response.send_message("‚úÖ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à–∏ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è!", ephemeral=True)
            print(f"‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –Ω–∞—á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {interaction.user.id}")
            
        except discord.Forbidden:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–° –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {interaction.user.id}")
            await interaction.response.send_message("‚ùå –ù–µ –º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç–∏.", ephemeral=True)

async def send_next_question(user: discord.User):
    if user.id not in pending_verifications:
        print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ pending_verifications")
        return
    
    data = pending_verifications[user.id]
    settings = verification_settings.get(data['guild_id'])
    
    if not settings or not settings['questions']:
        print(f"‚ùå –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
        return
    
    current_index = data['current_question']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã
    if current_index < len(settings['questions']):
        question = settings['questions'][current_index]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å
        await user.send(f"**üìù –í–æ–ø—Ä–æ—Å {current_index + 1}/{data['total_questions']}:**\n{question}")
        print(f"üìù –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–æ–ø—Ä–æ—Å {current_index + 1} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}")
        
    else:
        # –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã - –∑–∞–≤–µ—Ä—à–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é
        print(f"‚úÖ –í—Å–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Ç–≤–µ—á–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user.id}")
        await finish_verification(user)

async def finish_verification(user: discord.User):
    print(f"üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
    if user.id not in pending_verifications:
        print(f"‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ pending_verifications")
        return
    
    data = pending_verifications[user.id]
    settings = verification_settings.get(data['guild_id'])
    
    if not settings:
        print(f"‚ùå –ù–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {data['guild_id']}")
        return
    
    # –°–æ–∑–¥–∞–µ–º embed —Å –∑–∞—è–≤–∫–æ–π
    guild = bot.get_guild(data['guild_id'])
    member = guild.get_member(user.id)
    
    embed = discord.Embed(
        title=f"üìã –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è {user.display_name}",
        color=0x5865F2,
        timestamp=datetime.datetime.now()
    )
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    embed.add_field(
        name="üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
        value=f"**–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {user}\n"
              f"**ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** {user.id}\n"
              f"**–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:** <t:{int(user.created_at.timestamp())}:R>\n"
              f"**–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É:** <t:{int(member.joined_at.timestamp())}:R>",
        inline=False
    )
    
    # –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
    for i, answer in enumerate(data['answers']):
        if i < len(settings['questions']):
            embed.add_field(
                name=f"{i + 1}. {settings['questions'][i]}",
                value=answer or "*–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞*",
                inline=False
            )
    
    embed.set_footer(text=f"ID: {user.id}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ —Å –ø–∏–Ω–≥–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏
    log_channel = bot.get_channel(settings['log_channel_id'])
    if log_channel:
        admin_role = guild.get_role(settings['admin_role_id'])
        ping_text = admin_role.mention if admin_role else "@everyone"
        
        view = ModerationView(user.id, data['guild_id'])
        message = await log_channel.send(
            content=f"{ping_text} –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é!",
            embed=embed, 
            view=view
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        verification_data[user.id] = {
            'message_id': message.id,
            'guild_id': data['guild_id'],
            'answers': data['answers'],
            'timestamp': datetime.datetime.now()
        }
        print(f"üì® –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
    
    # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await user.send("‚úÖ **–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!** –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏—è.")
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    del pending_verifications[user.id]
    print(f"‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")

class ModerationView(View):
    def __init__(self, user_id: int, guild_id: int):
        super().__init__(timeout=None)
        self.user_id = user_id
        self.guild_id = guild_id
    
    @discord.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å", style=discord.ButtonStyle.success, custom_id="verify_accept")
    async def accept_button(self, interaction: discord.Interaction, button: Button):
        print(f"‚úÖ –ü—Ä–∏–Ω—è—Ç–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.user_id}")
        settings = verification_settings.get(self.guild_id)
        if not settings:
            await interaction.response.send_message("‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!", ephemeral=True)
            return
        
        guild = interaction.guild
        member = guild.get_member(self.user_id)
        
        if member:
            # –ú–µ–Ω—è–µ–º —Ä–æ–ª–∏
            temp_role = guild.get_role(settings['temp_role_id'])
            verified_role = guild.get_role(settings['verified_role_id'])
            
            if temp_role and temp_role in member.roles:
                await member.remove_roles(temp_role)
            if verified_role:
                await member.add_roles(verified_role)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º embed
            embed = interaction.message.embeds[0]
            embed.color = 0x00ff00
            embed.title = f"‚úÖ {member.display_name} (–í–ï–†–ò–§–ò–¶–ò–†–û–í–ê–ù)"
            
            status_text = f"–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω {interaction.user.mention}\n<t:{int(datetime.datetime.now().timestamp())}:F>"
            
            # –ò—â–µ–º –ø–æ–ª–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
            found_status = False
            for i, field in enumerate(embed.fields):
                if field.name == "–°—Ç–∞—Ç—É—Å":
                    embed.set_field_at(i, name="–°—Ç–∞—Ç—É—Å", value=status_text, inline=False)
                    found_status = True
                    break
            
            if not found_status:
                embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=status_text, inline=False)
            
            await interaction.message.edit(embed=embed, view=None)
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                await member.send("üéâ **–í–∞—à–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∞!** –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
            except:
                pass
            
            await interaction.response.send_message("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!", ephemeral=True)
            print(f"üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user_id} –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω")
        else:
            await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!", ephemeral=True)
    
    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger, custom_id="verify_deny")
    async def deny_button(self, interaction: discord.Interaction, button: Button):
        print(f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.user_id}")
        await handle_verification_deny(interaction, self.user_id)
    
    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å —Å –ø—Ä–∏—á–∏–Ω–æ–π", style=discord.ButtonStyle.secondary, custom_id="verify_deny_reason")
    async def deny_reason_button(self, interaction: discord.Interaction, button: Button):
        print(f"üìù –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —Å –ø—Ä–∏—á–∏–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.user_id}")
        modal = DenyReasonModal(self.user_id)
        await interaction.response.send_modal(modal)
    
    
    @discord.ui.button(label="–ö–∏–∫–Ω—É—Ç—å", style=discord.ButtonStyle.danger, custom_id="verify_kick")
    async def kick_button(self, interaction: discord.Interaction, button: Button):
        print(f"üë¢ –ö–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {self.user_id}")
        guild = interaction.guild
        member = guild.get_member(self.user_id)
        
        if member:
            try:
                # –ö–∏–∫–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                await member.kick(reason="–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞")
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
                await handle_verification_deny(interaction, self.user_id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∫–∏–∫–Ω—É—Ç —Å —Å–µ—Ä–≤–µ—Ä–∞")
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.user_id} –∫–∏–∫–Ω—É—Ç")
                
            except discord.Forbidden:
                await interaction.response.send_message("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∫–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)

# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
@bot.command()
@commands.has_permissions(administrator=True)
async def setup(ctx):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
    print(f"‚öôÔ∏è –ó–∞–ø—É—Å–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ {ctx.guild.id}")
    embed = discord.Embed(
        title="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π –±–æ—Ç–∞",
        description="–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å –≤—ã–ø–∞–¥–∞—é—â–∏–º –º–µ–Ω—é –≤—ã–±–æ—Ä–∞, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏.",
        color=0x5865F2,
        timestamp=datetime.datetime.now()
    )
    
    embed.add_field(
        name="üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:",
        value="‚Ä¢ **–ö–∞–Ω–∞–ª—ã** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏\n"
              "‚Ä¢ **–†–æ–ª–∏** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã\n"
              "‚Ä¢ **–í–æ–ø—Ä–æ—Å—ã** - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏\n"
              "‚Ä¢ **–°—Ç–∞—Ç—É—Å** - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫",
        inline=False
    )
    
    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—Å –æ—Ç {ctx.author.display_name}")
    
    view = SettingsView()
    await ctx.send(embed=embed, view=view)

@bot.event
async def on_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
    if message.author.bot:
        return
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –õ–°
    if message.guild is None and message.author.id in pending_verifications:
        print(f"üí¨ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.author.id}")
        data = pending_verifications[message.author.id]
        settings = verification_settings.get(data['guild_id'])
        
        if settings and data['current_question'] < len(settings['questions']):
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
            pending_verifications[message.author.id]['answers'].append(message.content)
            pending_verifications[message.author.id]['current_question'] += 1
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
            await send_next_question(message.author)
    
    await bot.process_commands(message)

@tasks.loop(hours=1)
async def cleanup_cooldowns():
    """–û—á–∏—Å—Ç–∫–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –∫—É–ª–¥–∞—É–Ω–æ–≤"""
    current_time = datetime.datetime.now()
    expired_users = [
        user_id for user_id, cooldown_end in cooldown_users.items() 
        if current_time >= cooldown_end
    ]
    
    for user_id in expired_users:
        del cooldown_users[user_id]
        print(f"üßπ –û—á–∏—â–µ–Ω –∫—É–ª–¥–∞—É–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

# –°–æ–±—ã—Ç–∏—è –±–æ—Ç–∞
@bot.event
async def on_connect():
    print('üîó –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ Discord')

@bot.event
async def on_disconnect():
    print('üîå –ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç Discord')

@bot.event
async def on_ready():
    print('=' * 50)
    print(f'‚úÖ –ë–û–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù!')
    print(f'ü§ñ –ò–º—è: {bot.user.name}')
    print(f'üÜî ID: {bot.user.id}')
    print(f'üìä –°–µ—Ä–≤–µ—Ä–æ–≤: {len(bot.guilds)}')
    print(f'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {sum(g.member_count for g in bot.guilds)}')
    print(f'üìÖ –í—Ä–µ–º—è: {datetime.datetime.now()}')
    print('=' * 50)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
    cleanup_cooldowns.start()
    print('üîÑ –§–æ–Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ –∑–∞–ø—É—â–µ–Ω—ã')

@bot.event
async def on_command_error(ctx, error):
    print(f'‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã: {error}')
    if isinstance(error, commands.CommandNotFound):
        await ctx.send("‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
    else:
        await ctx.send(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error}")

@bot.event
async def on_error(event, *args, **kwargs):
    print(f'‚ùå –û—à–∏–±–∫–∞ –≤ —Å–æ–±—ã—Ç–∏–∏ {event}:')
    traceback.print_exc()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
print(f"üìÅ –¢–æ–∫–µ–Ω –∏–∑ .env: {'‚úÖ –ù–∞–π–¥–µ–Ω' if os.getenv('DISCORD_TOKEN') else '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}")

try:
    TOKEN = os.getenv('DISCORD_TOKEN')
    if not TOKEN:
        print("‚ùå –¢–û–ö–ï–ù –ù–ï –ù–ê–ô–î–ï–ù –í .env –§–ê–ô–õ–ï!")
        print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç DISCORD_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        exit(1)
    
    print("üîê –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Discord...")
    bot.run(TOKEN)
    
except discord.LoginFailure:
    print("‚ùå –ù–ï–í–ï–†–ù–´–ô –¢–û–ö–ï–ù –ë–û–¢–ê!")
    print("üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    
except discord.HTTPException as e:
    print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø: {e}")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
    
except Exception as e:
    print(f"‚ùå –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê: {e}")
    traceback.print_exc()
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")